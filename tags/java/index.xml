<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Yo-Dave</title>
    <link>https://yo-dave.com/tags/java/</link>
    <description>Recent content in java on Yo-Dave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2011-2020, David D. Clark. All rights reserved.</copyright>
    <lastBuildDate>Sun, 14 May 2017 09:54:13 +0000</lastBuildDate><atom:link href="https://yo-dave.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leiningen passing Invalid Flags to Java Compiler</title>
      <link>https://yo-dave.com/2017/05/14/leiningen-passing-invalid-flags-to-java-compiler/</link>
      <pubDate>Sun, 14 May 2017 09:54:13 +0000</pubDate>
      
      <guid>https://yo-dave.com/2017/05/14/leiningen-passing-invalid-flags-to-java-compiler/</guid>
      <description>Just a note about some weirdness in my work process and itâ€™s solution.
A few weeks ago, I started noticing some weirdness in trying to use some tools with Leiningen while developing a program in Clojure. When running tools like kibit, lein would fail with an error from javac about an invalid flag. Initially these flags were for attempts to set the file encoding. And the file encoding kept changing.</description>
    </item>
    
    <item>
      <title>Keeping the JavaFX UI Responsive</title>
      <link>https://yo-dave.com/2017/01/30/keeping-the-javafx-ui-responsive/</link>
      <pubDate>Mon, 30 Jan 2017 16:45:26 +0000</pubDate>
      
      <guid>https://yo-dave.com/2017/01/30/keeping-the-javafx-ui-responsive/</guid>
      <description>It&amp;rsquo;s common knowledge that the JavaFX user interface toolkit is single-threaded. When your JavaFX-based program is doing things that can take some time, you need to run those tasks on a separate thread(s) to keep the interface responsive.
Recently, I&amp;rsquo;ve been working on a program that can spend a lot of time reading and writing to the disk, but at the same time I want to retain the ability for the user to change views of the UI as the work proceeds.</description>
    </item>
    
    <item>
      <title>Using Local Java JARS in Clojure Projects</title>
      <link>https://yo-dave.com/2015/10/03/using-local-java-jars-in-clojure-projects/</link>
      <pubDate>Sat, 03 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/10/03/using-local-java-jars-in-clojure-projects/</guid>
      <description>&lt;p&gt;Recently, I&amp;rsquo;ve been working on a &lt;a href=&#34;https://en.wikipedia.org/wiki/Sudoku&#34;&gt;Sudoku&lt;/a&gt; game program. Part of the program provides a user with the ability to generate new puzzles of a particular difficulty. Generating a puzzle usually requires two puzzle solvers: one that solves puzzles (slowly) like a human would, the other that solves puzzles (very quickly) like a computer would.&lt;/p&gt;
&lt;p&gt;Rather than write my own from scratch, for this part of the development, I wanted to use an existing implementation of the machine-like solver. After a little research (more on this some other time), I found one I liked a lot &amp;ndash; the &lt;a href=&#34;https://github.com/attractivechaos/plb/tree/master/sudoku&#34;&gt;Kudoku solver written in Java&lt;/a&gt; from &lt;a href=&#34;https://attractivechaos.wordpress.com/2011/06/19/an-incomplete-review-of-sudoku-solver-implementations/&#34;&gt;attractive chaos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But how does one use a local jar file in a Clojure Project? Read on&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding Mono-Spaced Fonts in JavaFX</title>
      <link>https://yo-dave.com/2015/07/27/finding-mono-spaced-fonts-in-javafx/</link>
      <pubDate>Mon, 27 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/07/27/finding-mono-spaced-fonts-in-javafx/</guid>
      <description>There are many use cases where a mono-spaced (fixed-width) font is useful in programming. Programming editors and creating program listings come to mind. But there doesn&amp;rsquo;t seem to be a consistent way of obtaining a list of all of the mono-spaced fonts installed in the operating system.
Back in the days of Swing, you usually had to grab a list of font families (e.g. Arial, Times New Roman, etc.) from AWT and then create a BufferedImage to print the font to and check layout widths.</description>
    </item>
    
    <item>
      <title>Tasks and UI Updates in JavaFX</title>
      <link>https://yo-dave.com/2015/06/30/tasks-and-ui-updates-in-javafx/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/06/30/tasks-and-ui-updates-in-javafx/</guid>
      <description>&lt;p&gt;Recently, I answered a &lt;a href=&#34;http://stackoverflow.com/questions/30980138/javafx-indeterminate-progress-bar-while-doing-a-process/30986188#30986188&#34;&gt;question&lt;/a&gt; on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;StackOverflow&lt;/a&gt; related to executing a long-running task in the background of a JavaFX application while updating the UI on the progress of that task. I have found myself coming back to that solution several times now.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web vs. Native App Redux</title>
      <link>https://yo-dave.com/2015/05/28/web-vs.-native-app-redux/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/05/28/web-vs.-native-app-redux/</guid>
      <description>&lt;p&gt;If you have been following along for awhile, you may have noted how conflicted I am about writing web apps &lt;em&gt;vs&lt;/em&gt;. native apps. I&amp;rsquo;ve been looking into &lt;a href=&#34;https://www.meteor.com/&#34;&gt;Meteor&lt;/a&gt;, which makes the decision even thornier for me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Focus Behavior Change between JavaFX 2 and JavaFX 8 when Selecting Rows in a TableView</title>
      <link>https://yo-dave.com/2015/04/18/focus-behavior-change-between-javafx-2-and-javafx-8-when-selecting-rows-in-a-tableview/</link>
      <pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/04/18/focus-behavior-change-between-javafx-2-and-javafx-8-when-selecting-rows-in-a-tableview/</guid>
      <description>&lt;p&gt;For a little while now, I&amp;rsquo;ve been working on an application that manages a list of documents, providing multiple views that the user can edit.&lt;/p&gt;
&lt;p&gt;The application looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yo-dave.com/static/img/2015_04_18_Main_Screen_Capture_Cropped.PNG&#34;&gt;&lt;img src=&#34;https://yo-dave.com/static/img/2015_04_18_Main_Screen_Capture.PNG&#34; alt=&#34;Image of the document manager main screen&#34; title=&#34;The document manager main screen&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;The document manager main screen&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The user selects the document they wish to view or edit by selecting it from the large &lt;code&gt;TableView&lt;/code&gt; in the middle of the window. The area on the right provides controls to view and edit details. (The area on the left is for filtering the documents displayed in the central table.)&lt;/p&gt;
&lt;p&gt;Based on some early advice, I had watchers on the focus property of the fields that could be edited. When a control lost focus, any changes were written to the database. The user didn&amp;rsquo;t have to do anything to save their work. It just happened.&lt;/p&gt;
&lt;p&gt;This worked with Java 7 and JavaFX 2. After the switch to Java 8 and JavaFX 8, things were not quite the same. If a user was making a change somewhere and then selected another document without moving to another editing view, the data was lost. The focus change notification did not arrive before the new document was selected in the table (repopulating the editing control before the data was saved.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Overwhelming Java&#39;s Swing</title>
      <link>https://yo-dave.com/2015/01/06/overwhelming-javas-swing/</link>
      <pubDate>Tue, 06 Jan 2015 09:47:27 +0000</pubDate>
      
      <guid>https://yo-dave.com/2015/01/06/overwhelming-javas-swing/</guid>
      <description>&lt;p&gt;An odd thing happened recently. I have been working on a simulation that produces graphical and text updates as it progresses. That involves drawing a picture of the system and updating some textual elements of the user interface.&lt;/p&gt;
&lt;p&gt;Things seemed to work fine when the simulation was run with &amp;ldquo;normal&amp;rdquo; inputs. However, when supplied with a set of parameters to produce a much simpler simulation, the user interface essentially locked up.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Which Version of Java will Leiningen Run from an Emacs Shell</title>
      <link>https://yo-dave.com/2014/04/21/which-version-of-java-will-leiningen-run-from-an-emacs-shell/</link>
      <pubDate>Mon, 21 Apr 2014 13:51:52 +0000</pubDate>
      
      <guid>https://yo-dave.com/2014/04/21/which-version-of-java-will-leiningen-run-from-an-emacs-shell/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been updating some of my projects to use the newly released Java 8. That includes many Clojure projects. These are just &amp;ldquo;flow of consciousness&amp;rdquo; debugging notes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Updating to Java 8 and NetBeans 8 on Ubuntu</title>
      <link>https://yo-dave.com/2014/03/30/updating-to-java-8-and-netbeans-8-on-ubuntu/</link>
      <pubDate>Sun, 30 Mar 2014 13:42:07 +0000</pubDate>
      
      <guid>https://yo-dave.com/2014/03/30/updating-to-java-8-and-netbeans-8-on-ubuntu/</guid>
      <description>&lt;p&gt;Just some notes on how I updated to the recent releases of Java 8 and NetBeans 8 on Ubuntu 13.10 (64 bit) running the Xfce desktop environment (Xubuntu).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaFX Still Not Ready?</title>
      <link>https://yo-dave.com/2013/12/29/javafx-still-not-ready/</link>
      <pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/12/29/javafx-still-not-ready/</guid>
      <description>Just a short rant about JavaFX because I&amp;rsquo;m pissed about it at the moment. I enjoy using it for the most part but it sometimes throws up surprising obstacles in otherwise routine work. The latest for me was an unexpected lack of a spinner control. There are alternatives in some open source projects, but, really? No spinners built in?
This is almost as gob-smacking weird as the lack of dialogs. (Ok, there are some dialogs, like for opening/saving files, but not much in the way of user-programmable dialogs built in.</description>
    </item>
    
    <item>
      <title>Paths with Spaces, I Give Up</title>
      <link>https://yo-dave.com/2013/08/08/paths-with-spaces-i-give-up/</link>
      <pubDate>Thu, 08 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/08/08/paths-with-spaces-i-give-up/</guid>
      <description>I&amp;rsquo;ve wanted to look into the Pedestal framework for creating web-based applications in Clojure. However, one of the requirements is Leiningen 2.2.0 or greater. And, as I&amp;rsquo;ve written before, version 2.2 will not install on my system because of spaces in the path of the user home directory. (&amp;quot;C:\Users\David Clark&amp;quot; on my system.)
My user profile name is &amp;ldquo;david&amp;rdquo;. That&amp;rsquo;s what I use to sign on with. The fact that my home directory uses &amp;ldquo;David Clark&amp;rdquo; is an unfortunate result of how the computer was set up at the factory when I custom ordered it.</description>
    </item>
    
    <item>
      <title>Java-Clojure Interop: An Update</title>
      <link>https://yo-dave.com/2013/06/25/java-clojure-interop-an-update/</link>
      <pubDate>Tue, 25 Jun 2013 18:16:04 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/06/25/java-clojure-interop-an-update/</guid>
      <description>My most popular answer on Stack Overflow has to do with Clojure-Java interop. Since that answer was written, some of the tools used in the answer,Â specificallyÂ enclojure(Broken Link), have been deprecated. Because many of the follow-up questions related to how to build a working version of the answer, I thought it might be a good idea to update the post with modern tools.
As this is written, the tools used include:</description>
    </item>
    
    <item>
      <title>Default JavaFX Platform in NetBeans</title>
      <link>https://yo-dave.com/2013/06/19/default-javafx-platform-in-netbeans/</link>
      <pubDate>Wed, 19 Jun 2013 16:26:49 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/06/19/default-javafx-platform-in-netbeans/</guid>
      <description>Update: With Java 8, the JavaFX library is included in the JDK. The machinations described here are no longer necessary.
Every time I update the default JDK used by NetBeans, I also want to update the default JavaFX platform. And I always forget how. Looking on the web usually results in finding methods that just don&amp;rsquo;t work. Here&amp;rsquo;s how I do it.
 In NetBeans (7.3 as of this writing), select the &amp;ldquo;Tools&amp;rdquo; menu and the &amp;ldquo;Java Platforms&amp;rdquo; drop-down menu.</description>
    </item>
    
    <item>
      <title>Keyboard Shortcuts for JavaFX Buttons</title>
      <link>https://yo-dave.com/2013/06/04/keyboard-shortcuts-for-javafx-buttons/</link>
      <pubDate>Tue, 04 Jun 2013 04:24:09 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/06/04/keyboard-shortcuts-for-javafx-buttons/</guid>
      <description>Most programs written for graphical user interfaces still provide a way to operate with the keyboard, requiring minimal mouse usage. The thought is that expert users will want to speed through their work keeping their fingers on the keyboard rather than devote an entire hands worth of fingers to controlling the mouse. I&amp;rsquo;ve been learning JavaFX, the eventual replacement for the Swing UI framework on Java, and wanted to explore how shortcut functionality had changed.</description>
    </item>
    
    <item>
      <title>JavaFX KeyCodeCombinations in Clojure</title>
      <link>https://yo-dave.com/2013/06/01/javafx-keycodecombinations-in-clojure/</link>
      <pubDate>Sat, 01 Jun 2013 22:26:04 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/06/01/javafx-keycodecombinations-in-clojure/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been experimenting with adding keyboard accelerators to some of the &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; programs I&amp;rsquo;ve written with &lt;a href=&#34;http://www.oracle.com/technetwork/java/javafx/overview/index.html&#34;&gt;JavaFX&lt;/a&gt;-based user interfaces. As part of that investigation, I tried to translate the &lt;a href=&#34;http://en.wikipedia.org/wiki/Java_%28programming_language%29&#34;&gt;Java &lt;/a&gt; program &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://www.example8.com/category/view/id/76&#34; title=&#34;Link to Java version of program.&#34;&gt;here&lt;/a&gt;&lt;!-- raw HTML omitted --&gt; (&lt;strong&gt;Broken Link&lt;/strong&gt;) to Clojure. The program just puts up a window with a menu bar containing only a &amp;ldquo;&lt;code&gt;File&lt;/code&gt;&amp;rdquo; menu which itself contains one item, &amp;ldquo;&lt;code&gt;Exit&lt;/code&gt;&amp;rdquo;. Most programs provide a keyboard shortcut or accelerator to close the program with a &lt;code&gt;Ctrl-X&lt;/code&gt; (on Windows). Figuring out how to add that functionality was a bit of an issue for me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Re-sizing an Interface in JavaFX and Clojure</title>
      <link>https://yo-dave.com/2013/02/18/re-sizing-an-interface-in-javafx-and-clojure/</link>
      <pubDate>Mon, 18 Feb 2013 21:48:11 +0000</pubDate>
      
      <guid>https://yo-dave.com/2013/02/18/re-sizing-an-interface-in-javafx-and-clojure/</guid>
      <description>Since JavaFX is the future of the user interface for Java, I&amp;rsquo;ve started trying to learn it. Since I&amp;rsquo;m also learning Clojure, I&amp;rsquo;m doing the work in that language.
One of the things I&amp;rsquo;ve been looking into is how the interface responds to resizing. If you have all of your controls in a nice layout, that is usually taken care of for you. But how do you handle things if the interface is not made up of standard components, something like a graphical game interface for example?</description>
    </item>
    
    <item>
      <title>Favorite Programming Books</title>
      <link>https://yo-dave.com/2011/12/01/favorite-programming-books/</link>
      <pubDate>Thu, 01 Dec 2011 11:16:22 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/12/01/favorite-programming-books/</guid>
      <description>&lt;p&gt;Every programmer seems to have their own list of favorite programming books. The lists are very personal and seem to be influenced by the age of the programmer, their training, and their field of endeavor. My own list follows.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Wilcoxon Matched Pairs</title>
      <link>https://yo-dave.com/2011/11/14/wilcoxon-matched-pairs/</link>
      <pubDate>Mon, 14 Nov 2011 18:32:38 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/11/14/wilcoxon-matched-pairs/</guid>
      <description>&lt;p&gt;At my previous employer, our goal was to stain tissue samples such that a pathologist could examine them microscopically and easily make unambiguous diagnoses of disease state. Experiments typically involved getting subjective judgments from pathologists about which samples were &amp;ldquo;better&amp;rdquo; in some way. How do you do statistics on those type of results?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java Data Grid Component -- A Personal Failing</title>
      <link>https://yo-dave.com/2011/09/22/java-data-grid-component-a-personal-failing/</link>
      <pubDate>Thu, 22 Sep 2011 08:06:10 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/09/22/java-data-grid-component-a-personal-failing/</guid>
      <description>&lt;p&gt;Many of the programs I write need a way to enter and edit a two-dimensional grid of data in the user interface. Such a grid doesn&amp;rsquo;t need to be a full-fledged spreadsheet, just provide flexible data entry and editing. Alas, there doesn&amp;rsquo;t seem to be such a thing and I haven&amp;rsquo;t created one that I&amp;rsquo;m satisfied with.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Sign Test</title>
      <link>https://yo-dave.com/2011/07/09/the-sign-test/</link>
      <pubDate>Sat, 09 Jul 2011 22:37:26 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/07/09/the-sign-test/</guid>
      <description>Sometimes weakness is a strength. That certainly seems to be the case for the lowly sign test. It is about the simplest statistical significance test imaginable. But if it tells you something is important, it probably is.
Usually when you hear people talk about the &amp;ldquo;power&amp;rdquo; of a statistical test, they are referring to the ability of the test to detect a significant difference when one exists. For example, Student&amp;rsquo;s t test is a favorite and very powerful test for differences in means when you have data meeting the underlying assumptions of the test.</description>
    </item>
    
    <item>
      <title>Things to Remember when Updating Java Version</title>
      <link>https://yo-dave.com/2011/06/17/things-to-remember-when-updating-java-version/</link>
      <pubDate>Fri, 17 Jun 2011 14:27:57 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/06/17/things-to-remember-when-updating-java-version/</guid>
      <description>New versions of Java come out fairly frequently. On my system, I need to remember to update other settings to use the updates. These include:
 The JAVA_HOME environment variable The path to the bin directory in the PATH environment variable The &amp;ldquo;Program Files\Netbeans x.x\etc\netbeans.conf&amp;rdquo; file (on Windows) These settings keep everything building and running correctly.  </description>
    </item>
    
    <item>
      <title>Binomial Confidence Intervals -- BinomConf</title>
      <link>https://yo-dave.com/2011/06/14/binomial-confidence-intervals-binomconf/</link>
      <pubDate>Tue, 14 Jun 2011 16:57:28 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/06/14/binomial-confidence-intervals-binomconf/</guid>
      <description>&lt;p&gt;Way back in my career there was a need to calculate binomial confidence intervals on experiments with very large numbers of trials (thousands to tens of thousands.) The statistics packages of the time couldn&amp;rsquo;t seem to handle such large numbers of trials.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Clojure and Java Interaction</title>
      <link>https://yo-dave.com/2011/02/13/clojure-and-java-interaction/</link>
      <pubDate>Sun, 13 Feb 2011 02:10:46 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/02/13/clojure-and-java-interaction/</guid>
      <description>&lt;p&gt;One of my most-upvoted &lt;a href=&#34;http://stackoverflow.com/questions/2181774/calling-clojure-from-java/2187427#2187427&#34;&gt;answers&lt;/a&gt; on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stackoverflow&lt;/a&gt; is a simple example of how to call &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; functions from Java. It doesn&amp;rsquo;t require calling through the Clojure run-time as so many responses do. But there is more to writing programs than calling static functions, as in my answer. You also might need to call methods &lt;em&gt;of&lt;/em&gt; objects and &lt;em&gt;on&lt;/em&gt; objects across the Clojure/Java divide.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Re-sizing an Icon in Java for Swing</title>
      <link>https://yo-dave.com/2011/01/23/re-sizing-an-icon-in-java-for-swing/</link>
      <pubDate>Sun, 23 Jan 2011 01:41:21 +0000</pubDate>
      
      <guid>https://yo-dave.com/2011/01/23/re-sizing-an-icon-in-java-for-swing/</guid>
      <description>Sometimes you have a resource like an icon or image that almost works, but not quite. For example, there was a question on StackOverflow about how to re-size an existing icon to fit in the smaller location at the lower right corner of a JScrollPane. The original poster was close. Here&amp;rsquo;s the code I came up with that actually worked.
import javax.swing.*; import java.awt.*; public class CornerButton extends JFrame { public CornerButton() { JTextArea area = new JTextArea(20, 20); JScrollPane scroll = new JScrollPane(area); Icon icn = UIManager.</description>
    </item>
    
  </channel>
</rss>
