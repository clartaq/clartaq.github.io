<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>voice on Yo-Dave</title>
    <link>https://yo-dave.com/tags/voice/</link>
    <description>Recent content in voice on Yo-Dave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2011-2018, David D. Clark. All rights reserved.</copyright>
    <lastBuildDate>Sun, 17 Jul 2016 12:35:08 +0000</lastBuildDate>
    
	<atom:link href="https://yo-dave.com/tags/voice/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Speech Synthesis in ClojureScript</title>
      <link>https://yo-dave.com/2016/07/17/speech-synthesis-in-clojurescript/</link>
      <pubDate>Sun, 17 Jul 2016 12:35:08 +0000</pubDate>
      
      <guid>https://yo-dave.com/2016/07/17/speech-synthesis-in-clojurescript/</guid>
      <description>&lt;p&gt;Just like everyone else, it seems, I&#39;ve been following all of the news about voice-activated personal assistants. There are all the commercial offerings like Siri, Alexa, Cortana, and so on, as well as some DIY projects on the web, like this &lt;a href=&#34;https://blog.truthlabs.com/rethinking-voice-search-2496640fdec2#.uvnrkmji0&#34;&gt;one&lt;/a&gt; and &lt;a href=&#34;https://howchoo.com/g/yti5mmq0ntu/add-voice-controls-to-your-raspberry-pi-using-jasper&#34;&gt;this one&lt;/a&gt; and &lt;a href=&#34;http://www.instructables.com/id/Raspberri-Personal-Assistant/&#34;&gt;this one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These types of projects typically involve a front end that converts voice to text, some middle piece that interprets the text and obtains some answer or creates an action, ending up with a voice response by the system back to the user. I have some (out-of-date) experience with speech to text, but not the other end of the process: text to speech. So here&#39;s a little investigation into how to do it with ClojureScript. Turns out that it is almost trivial these days.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>